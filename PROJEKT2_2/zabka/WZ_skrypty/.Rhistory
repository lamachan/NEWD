library(shiny); runApp('D:/DOKUMENTY/STUDIA/SEMESTR 6/NEWD/PROJEKT/NEWD/PROJEKT2_1/Oficerowie1921.R')
runApp('D:/DOKUMENTY/STUDIA/SEMESTR 6/NEWD/PROJEKT/NEWD/PROJEKT2_1/AK1944.R')
runApp('D:/DOKUMENTY/STUDIA/SEMESTR 6/NEWD/PROJEKT/NEWD/PROJEKT2_1/Oficerowie1945.R')
runApp('D:/DOKUMENTY/STUDIA/SEMESTR 6/NEWD/PROJEKT/NEWD/PROJEKT2_1/WZ_skrypty/powstanie_styczniowe.R')
# Load necessary libraries
library(plotly)
library(dplyr)
# Load the CSV data
data <- read.csv('../zabka_shops.csv')
setwd("D:/DOKUMENTY/STUDIA/SEMESTR 6/NEWD/PROJEKT/NEWD/PROJEKT2_2/zabka/WZ_skrypty")
# Load necessary libraries
library(plotly)
library(dplyr)
# Load the CSV data
data <- read.csv('../zabka_shops.csv')
# Filter out rows with missing latitude and longitude values
data <- data %>%
filter(!is.na(lat) & !is.na(lng))
# Create a heatmap using Plotly
fig <- plot_ly(
data,
type = 'densitymapbox',
lat = ~lat,
lon = ~lng,
radius = 10,  # Adjust the radius for the heatmap points
colorscale = 'Greens',
opacity = 0.6  # Adjust the opacity of the heatmap points
) %>%
layout(
mapbox = list(
style = 'open-street-map',  # Use the OpenStreetMap style for the map
center = list(lon = 19, lat = 52),  # Set the center to Poland's approximate coordinates
zoom = 5  # Adjust the zoom level
),
title = 'Zabka Shop Density Heatmap',
showlegend = FALSE  # Hide the color scale legend
)
# Show the interactive heatmap
fig
library(htmlwidgets)
saveWidget(fig, "../WZ_wykresy/zabka_shop_density_heatmap.html")
# Load necessary libraries
library(plotly)
library(dplyr)
# Load the CSV data
data <- read.csv('../zabka_shops.csv')
# Filter out rows with missing latitude and longitude values
data <- data %>%
filter(!is.na(lat) & !is.na(lng))
# Create a heatmap using Plotly
fig <- plot_ly(
data,
type = 'densitymapbox',
lat = ~lat,
lon = ~lng,
radius = 10,  # Adjust the radius for the heatmap points
colorscale = 'Greens',
opacity = 0.6  # Adjust the opacity of the heatmap points
) %>%
layout(
mapbox = list(
style = 'open-street-map',  # Use the OpenStreetMap style for the map
center = list(lon = 19, lat = 52),  # Set the center to Poland's approximate coordinates
zoom = 5  # Adjust the zoom level
),
title = 'Żabki w Polsce',
showlegend = FALSE  # Hide the color scale legend
)
# Show the interactive heatmap
fig
library(htmlwidgets)
saveWidget(fig, "../WZ_wykresy/zabka_shop_density_heatmap.html")
# Load necessary libraries
library(plotly)
library(dplyr)
# Load the CSV data
data <- read.csv('../zabka_shops.csv')
# Filter out rows with missing latitude and longitude values
data <- data %>%
filter(!is.na(lat) & !is.na(lng) & !is.na(services))
# Filter rows where 'services' column contains "DKM"
data_filtered <- data[grepl("DKM", data$services, ignore.case = TRUE, fixed = TRUE), ]
# Load necessary libraries
library(plotly)
library(dplyr)
# Load the CSV data
data <- read.csv('../zabka_shops.csv')
# Filter out rows with missing latitude and longitude values
data <- data %>%
filter(!is.na(lat) & !is.na(lng) & !is.na(services))
# Filter rows where 'services' column contains "DKM"
data_filtered <- data[grepl("DKM", data$services, fixed = TRUE), ]
View(data_filtered)
# Load necessary libraries
library(plotly)
library(dplyr)s
# Load necessary libraries
library(plotly)
library(dplyr)
library(htmlwidgets)
# Load the CSV data
data <- read.csv('../zabka_shops.csv')
# Filter out rows with missing latitude and longitude values
data <- data %>%
filter(!is.na(lat) & !is.na(lng) & !is.na(services))
# Filter rows where 'services' column contains "DKM"
data_filtered <- data[grepl("DKM", data$services, fixed = TRUE), ]
# Create a heatmap using Plotly
fig <- plot_ly(
data_filtered,
type = 'densitymapbox',
lat = ~lat,
lon = ~lng,
radius = 10,  # Adjust the radius for the heatmap points
colorscale = 'Greens',
opacity = 0.6  # Adjust the opacity of the heatmap points
) %>%
layout(
mapbox = list(
style = 'open-street-map',  # Use the OpenStreetMap style for the map
center = list(lon = 19, lat = 52),  # Set the center to Poland's approximate coordinates
zoom = 5  # Adjust the zoom level
),
title = 'Żabki w Polsce z usługą DKM',
showlegend = FALSE  # Hide the color scale legend
)
saveWidget(fig, "../WZ_wykresy/zabka_mapa_dkm.html")
View(data)
View(data)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$opening_hours <- paste(data$openTime, "-", data$closeTime, sep = "")
# Count the number of shops in each city
opening_hours_counts <- data %>%
group_by(opening_hours) %>%
summarise(num_shops = n()) %>%
ungroup()
View(opening_hours_counts)
View(opening_hours_counts)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$opening_hours <- paste(data$openTime, "-", data$closeTime, sep = "")
# Count the number of shops in each city
opening_hours_counts <- data %>%
group_by(opening_hours) %>%
summarise(num_shops = n()) %>%
ungroup()
# # Select the top 10 cities with the most shops
# top_10_cities <- city_counts %>%
#   arrange(desc(num_shops)) %>%
#   head(10)
# Create barplot
barplot <- ggplot(opening_hours_counts, aes(x = reorder(opening_hours, -num_shops), y = num_shops, fill = opening_hours)) +
geom_bar(stat = "identity", fill='#00692b') +
labs(x = "Godziny otwarca", y = "Liczba Żabek", title = "Godziny otwarcia Żabek") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the barplot
print(barplot)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$opening_hours <- paste(data$openTime, "-", data$closeTime, sep = "")
# Count the number of shops with each opening hours
opening_hours_counts <- data %>%
group_by(opening_hours) %>%
summarise(num_shops = n()) %>%
ungroup()
# Select the top 10 most common opening hours
top_10_opening_hours <- opening_hours_counts %>%
arrange(desc(num_shops)) %>%
head(10)
# Create barplot
barplot <- ggplot(top_10_opening_hours, aes(x = reorder(opening_hours, -num_shops), y = num_shops, fill = opening_hours)) +
geom_bar(stat = "identity", fill='#00692b') +
labs(x = "Godziny otwarca", y = "Liczba Żabek", title = "Godziny otwarcia Żabek") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the barplot
print(barplot)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$opening_hours <- paste(data$openTime, "-", data$closeTime, sep = "")
# Count the number of shops with each opening hours
opening_hours_counts <- data %>%
group_by(opening_hours) %>%
summarise(num_shops = n()) %>%
ungroup()
# Select the top 3 most common opening hours
top_3_opening_hours <- opening_hours_counts %>%
arrange(desc(num_shops)) %>%
head(3)
# Create barplot
barplot <- ggplot(top_3_opening_hours, aes(x = reorder(opening_hours, -num_shops), y = num_shops, fill = opening_hours)) +
geom_bar(stat = "identity", fill='#00692b') +
labs(x = "Godziny otwarca", y = "Liczba Żabek", title = "Top 3 najczęstsze godziny otwarcia Żabek") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the barplot
print(barplot)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
View(data)
View(data)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
View(data)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
View(data)
View(data)
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
hist(data$open_hours, main = "Histogram of open_seconds", xlab = "Open Seconds", ylab = "Frequency")
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
hist(data$open_hours,
main = "Histogram of open_seconds",
xlab = "Open Seconds",
ylab = "Frequency",
breaks = 100,
col = '#00692b')
hist(data$open_hours,
main = "Histogram of open_seconds",
xlab = "Open Seconds",
ylab = "Frequency",
breaks = 1000,
col = '#00692b')
hist(data$open_hours,
main = "Histogram of open_seconds",
xlab = "Open Seconds",
ylab = "Frequency",
breaks = 50,
col = '#00692b')
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
hist(data$open_hours,
main = "Histogram of open_seconds",
xlab = "Open Seconds",
ylab = "Frequency",
breaks = 10,
col = '#00692b')
50
hist(data$open_hours,
main = "Histogram of open_seconds",
xlab = "Open Seconds",
ylab = "Frequency",
breaks = 50,
col = '#00692b')
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
hist(data$open_hours,
main = "Histogram of open_seconds",
xlab = "Open Seconds",
ylab = "Frequency",
breaks = 10,
col = '#00692b')
ggplot(data, aes(x = open_hours)) +
geom_density(fill = "#00692b", color = "black") +
labs(title = "Density Plot of open_seconds", x = "Open Seconds", y = "Density")
ggplot(data, aes(y = open_hours)) +
geom_boxplot(fill = "#00692b", color = "black") +
labs(title = "Boxplot of open_seconds", y = "Open Seconds")
# Load required library
library(ggplot2)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
hist(data$open_hours,
main = "Histogram - czas otwarcia",
xlab = "Liczba godzin",
ylab = "Liczba Żabek",
breaks = 10,
col = '#00692b')
ggplot(data, aes(y = open_hours)) +
geom_boxplot(fill = "#00692b", color = "black") +
labs(title = "Wykres pudełkowy - czas otwarcia", y = "Liczba godzin")
# Load required library
library(ggplot2)
library(gridExtra)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
histogram <- hist(data$open_hours,
main = "Histogram - czas otwarcia",
xlab = "Liczba godzin",
ylab = "Liczba Żabek",
breaks = 10,
col = '#00692b')
boxplot <- ggplot(data, aes(y = open_hours)) +
geom_boxplot(fill = "#00692b", color = "black") +
labs(title = "Wykres pudełkowy - czas otwarcia", y = "Liczba godzin")
grid.arrange(histogram, boxplot, ncol = 2)
# Load required library
library(ggplot2)
library(gridExtra)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
histogram <- hist(data$open_hours,
main = "Histogram - czas otwarcia",
xlab = "Liczba godzin",
ylab = "Liczba Żabek",
breaks = 10,
col = '#00692b',
plot = FALSE)
boxplot <- ggplot(data, aes(y = open_hours)) +
geom_boxplot(fill = "#00692b", color = "black") +
labs(title = "Wykres pudełkowy - czas otwarcia", y = "Liczba godzin")
hist_gg <- ggplot(data.frame(x = histogram$mids, y = histogram$counts), aes(x, y)) +
geom_bar(stat = "identity", fill = "#00692b") +
theme_minimal()
# Arrange the plots side by side
grid.arrange(hist_gg, boxplot_plot, ncol = 2)
# Load required library
library(ggplot2)
library(gridExtra)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
histogram <- hist(data$open_hours,
main = "Histogram - czas otwarcia",
xlab = "Liczba godzin",
ylab = "Liczba Żabek",
breaks = 10,
col = '#00692b',
plot = FALSE)
boxplot <- ggplot(data, aes(y = open_hours)) +
geom_boxplot(fill = "#00692b", color = "black") +
labs(title = "Wykres pudełkowy - czas otwarcia", y = "Liczba godzin")
hist_gg <- ggplot(data.frame(x = histogram$mids, y = histogram$counts), aes(x, y)) +
geom_bar(stat = "identity", fill = "#00692b") +
theme_minimal()
# Arrange the plots side by side
grid.arrange(hist_gg, boxplot, ncol = 2)
# Load required library
library(ggplot2)
library(gridExtra)
# Load the CSV data
data <- read.csv("../zabka_shops.csv")
# Filter out rows with missing values
data <- na.omit(data)
data$open_seconds <- data$closeTimeSeconds - data$openTimeSeconds
data$open_seconds <- ifelse(data$open_seconds < 0, 86400 + data$open_seconds, data$open_seconds)
data$open_hours <- data$open_seconds / 3600
histogram <- hist(data$open_hours,
main = "Histogram - czas otwarcia",
xlab = "Liczba godzin",
ylab = "Liczba Żabek",
breaks = 10,
col = '#00692b',
plot = FALSE)
boxplot <- ggplot(data, aes(y = open_hours)) +
geom_boxplot(fill = "#00692b", color = "black") +
labs(title = "Wykres pudełkowy - czas otwarcia", y = "Liczba godzin")
hist_gg <- ggplot(data.frame(x = histogram$mids, y = histogram$counts), aes(x, y)) +
geom_bar(stat = "identity", fill = "#00692b") +
theme_minimal() +
labs(title = "Histogram - czas otwarcia", x = "Liczba godzin", y = "Liczba Żabek")
# Arrange the plots side by side
grid.arrange(hist_gg, boxplot, ncol = 2)
