# Zaimportowanie pakietu dplyr
library(dplyr)
# Wybieranie tylko kolumn numerycznych
dane_num <- dane %>%
select_if(is.numeric)
# Obliczenie średnich wartości dla każdego gatunku
srednie <- sapply(dane_num, function(x) if(is.numeric(x)) mean(x, na.rm = TRUE) else NA)
# Konwersja wyników na data frame
srednie_df <- as.data.frame(t(srednie))
# Dodanie nazw kolumn
colnames(srednie_df) <- c("Head.length", "Head.width")
# Dodanie kolumny z nazwami gatunków
srednie_df$Species <- rownames(srednie_df)
# Tworzenie interaktywnego wykresu ggplot2
wykres <- ggplot(srednie_df, aes(x = Head.length, y = Head.width, text = Species)) +
geom_point(color = "blue") +
labs(title = "Średnia długość i szerokość głowy dla każdego gatunku",
x = "Średnia długość głowy", y = "Średnia szerokość głowy") +
theme_minimal()
# Konwersja na wykres interaktywny
wykres_interaktywny <- ggplotly(wykres)
# Wyświetlenie wykresu interaktywnego
print(wykres_interaktywny)
source("~/.active-rstudio-document")
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Wybieranie tylko kolumn numerycznych
dane_num <- dane %>%
select_if(is.numeric)
# Obliczenie średnich wartości dla każdego gatunku
srednie <- sapply(dane_num, function(x) if(is.numeric(x)) mean(x, na.rm = TRUE) else NA)
# Konwersja wyników na data frame
srednie_df <- as.data.frame(t(srednie))
# Dodanie nazw kolumn
colnames(srednie_df) <- c("Head.length", "Head.width")
# Dodanie kolumny z nazwami gatunków
srednie_df$Species <- rownames(srednie_df)
# Tworzenie interaktywnego wykresu ggplot2
wykres <- ggplot(srednie_df, aes(x = Head.length, y = Head.width, text = Species)) +
geom_point(color = "darkgreen") +
labs(title = "Średnia długość i szerokość głowy dla każdego gatunku",
x = "Średnia długość głowy", y = "Średnia szerokość głowy") +
theme_minimal()
# Konwersja na wykres interaktywny
wykres_interaktywny <- ggplotly(wykres)
# Wyświetlenie wykresu interaktywnego
print(wykres_interaktywny)
print(wykres_interaktywny)
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Wybieranie tylko kolumn numerycznych
dane_num <- dane %>%
select_if(is.numeric)
# Obliczenie średnich wartości dla każdego gatunku
srednie <- sapply(dane_num, function(x) if(is.numeric(x)) mean(x, na.rm = TRUE) else NA)
# Konwersja wyników na data frame
srednie_df <- as.data.frame(t(srednie))
# Dodanie nazw kolumn
colnames(srednie_df) <- c("Head.length", "Head.width")
# Dodanie kolumny z nazwami gatunków
srednie_df$Species <- rownames(srednie_df)
# Tworzenie interaktywnego wykresu ggplot2
wykres <- ggplot(srednie_df, aes(x = Head.length, y = Head.width, text = Species)) +
geom_point(color = "darkgreen") +
labs(title = "Średnia długość i szerokość głowy dla każdego gatunku",
x = "Średnia długość głowy", y = "Średnia szerokość głowy") +
theme_minimal()
# Konwersja na wykres interaktywny
wykres_interaktywny <- ggplotly(wykres)
# Wyświetlenie wykresu interaktywnego
print(wykres_interaktywny)
cls
clear
clc
c
cl
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Wybieranie tylko kolumn numerycznych
dane_num <- dane %>%
select_if(is.numeric)
# Obliczenie średnich wartości dla każdego gatunku
srednie <- sapply(dane_num, function(x) if(is.numeric(x)) mean(x, na.rm = TRUE) else NA)
# Konwersja wyników na data frame
srednie_df <- as.data.frame(t(srednie))
# Dodanie nazw kolumn
colnames(srednie_df) <- c("Head.length", "Head.width")
# Dodanie kolumny z nazwami gatunków
srednie_df$Species <- rownames(srednie_df)
# Tworzenie interaktywnego wykresu ggplot2
wykres <- ggplot(srednie_df, aes(x = Head.length, y = Head.width, text = Species)) +
geom_point(color = "darkgreen") +
labs(title = "Średnia długość i szerokość głowy dla każdego gatunku",
x = "Średnia długość głowy", y = "Średnia szerokość głowy") +
theme_minimal()
# Konwersja na wykres interaktywny
wykres_interaktywny <- ggplotly(wykres)
# Wyświetlenie wykresu interaktywnego
print(wykres_interaktywny)
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Zaimportowanie pakietu dplyr do manipulacji danymi
library(dplyr)
# Zaimportowanie pakietu tidyr do manipulacji danymi
library(tidyr)
# Wybieranie tylko kolumn numerycznych
dane_num <- dane %>%
select_if(is.numeric)
# Przekształcenie danych na format długi
dane_long <- dane_num %>%
gather(key = "measurement", value = "value")
# Tworzenie histogramu dla każdej zmiennej numerycznej
wykresy_histogram <- ggplot(dane_long, aes(x = value)) +
geom_histogram(binwidth = 2) +
facet_wrap(~ measurement, scales = "free") +
labs(title = "Histogramy pomiarów", x = "Wartość", y = "Liczba przypadków") +
theme_minimal()
# Wyświetlenie histogramów
print(wykresy_histogram)
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Zaimportowanie pakietu dplyr do manipulacji danymi
library(dplyr)
# Zaimportowanie pakietu tidyr do manipulacji danymi
library(tidyr)
# Wybieranie tylko kolumn numerycznych
dane_num <- dane %>%
select_if(is.numeric)
# Przekształcenie danych na format długi
dane_long <- dane_num %>%
gather(key = "measurement", value = "value")
# Tworzenie histogramu dla każdej zmiennej numerycznej
# Tworzenie histogramu dla każdej zmiennej numerycznej
wykresy_histogram <- ggplot(dane_long, aes(x = value, fill = measurement)) +
geom_histogram(binwidth = 2, color = "black") +
facet_wrap(~ measurement, scales = "free") +
labs(title = "Histogramy pomiarów", x = "Wartość", y = "Liczba przypadków") +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
legend.title = element_text(color = "black"),
legend.text = element_text(color = "black")) +
scale_fill_manual(values = c("Head.width" = "green", "Head.length" = "green", "Internarial" = "green", "Interorbital" = "green",
"Eye.length" = "green", "Eye.naris" = "green", "Naris.snout" = "green",
"Antebrachial.length" = "green", "Femur.length" = "green", "Tibio.fibula" = "green"))
# Wyświetlenie histogramów
print(wykresy_histogram)
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Tworzenie histogramu dla pomiaru SVL
histogram_SVL <- ggplot(dane, aes(x = SVL)) +
geom_histogram(binwidth = 1, fill = "green", color = "black") +
labs(title = "Histogram pomiaru SVL", x = "SVL", y = "Liczba przypadków") +
theme_minimal()
# Wyświetlenie histogramu
print(histogram_SVL)
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- aggregate(Eye.length ~ Species, data = dane, FUN = mean)
# Połączenie danych z wielkością oczu i SVL dla każdego gatunku
dane_do_wykresu <- merge(srednia_oczy, dane[, c("Species", "SVL")], by = "Species")
# Tworzenie wykresu punktowego
wykres_punktowy <- ggplot(dane_do_wykresu, aes(x = SVL, y = Eye.length, color = Species)) +
geom_point() +
labs(title = "Zależność wielkości oczu od SVL",
x = "SVL",
y = "Średnia wielkość oczu") +
theme_minimal()
# Wyświetlenie wykresu
print(wykres_punktowy)
# Zaimportowanie pakietu ggplot2 do tworzenia wykresów
library(ggplot2)
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- aggregate(Eye.length ~ Species, data = dane, FUN = mean)
# Połączenie danych z wielkością oczu i SVL dla każdego gatunku
dane_do_wykresu <- merge(srednia_oczy, dane[, c("Species", "SVL")], by = "Species")
# Tworzenie wykresu punktowego
wykres_punktowy <- ggplot(dane_do_wykresu, aes(x = SVL, y = Eye.length, color = Species)) +
geom_point() +
labs(title = "Zależność wielkości oczu od SVL",
x = "SVL",
y = "Średnia wielkość oczu",
color = "Species") + # Dodanie etykiety do legendy
theme_minimal()
# Usunięcie etykiety dla osi x
wykres_punktowy <- wykres_punktowy + theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Wyświetlenie wykresu
print(wykres_punktowy)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_wykresu <- inner_join(srednia_SVL, srednia_oczy, by = "Species")
# Tworzenie wykresu punktowego
wykres_punktowy <- ggplot(dane_do_wykresu, aes(x = mean_SVL, y = mean_eye_length)) +
geom_point() +
labs(title = "Zależność średniej wielkości oczu od średniej SVL",
x = "Średnia SVL",
y = "Średnia wielkość oczu") +
theme_minimal()
# Wyświetlenie wykresu
print(wykres_punktowy)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_wykresu <- inner_join(srednia_SVL, srednia_oczy, by = "Species")
# Tworzenie wykresu punktowego
# Tworzenie wykresu punktowego
wykres_punktowy <- ggplot(dane_do_wykresu, aes(x = mean_SVL, y = mean_eye_length)) +
geom_point(color = "green") + # Zmiana koloru punktów na zielony
labs(title = "Zależność średniej wielkości oczu od średniej SVL",
x = "Średnia SVL",
y = "Średnia wielkość oczu") +
theme_minimal()
# Wyświetlenie wykresu
print(wykres_punktowy)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_wykresu <- inner_join(srednia_SVL, srednia_oczy, by = "Species")
# Tworzenie wykresu punktowego
# Tworzenie wykresu punktowego
wykres_punktowy <- ggplot(dane_do_wykresu, aes(x = mean_SVL, y = mean_eye_length)) +
geom_point(color = "lightgreen") + # Zmiana koloru punktów na zielony
labs(title = "Zależność średniej wielkości oczu od średniej SVL",
x = "Średnia SVL",
y = "Średnia wielkość oczu") +
theme_minimal()
# Wyświetlenie wykresu
print(wykres_punktowy)
# Zaimportowanie pakietu plotly do tworzenia interaktywnych wykresów
library(plotly)
# Tworzenie interaktywnego wykresu punktowego
wykres_interaktywny <- ggplotly(wykres_punktowy, tooltip = c("Species"))
# Wyświetlenie interaktywnego wykresu
print(wykres_interaktywny)
# Zaimportowanie pakietu plotly do tworzenia interaktywnych wykresów
library(plotly)
# Tworzenie interaktywnego wykresu punktowego
wykres_interaktywny <- ggplotly(wykres_punktowy, tooltip = c("Species"))
# Wyświetlenie interaktywnego wykresu
print(wykres_interaktywny)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_wykresu <- inner_join(srednia_SVL, srednia_oczy, by = "Species")
# Tworzenie wykresu punktowego
# Tworzenie wykresu punktowego
wykres_punktowy <- ggplot(dane_do_wykresu, aes(x = mean_SVL, y = mean_eye_length)) +
geom_point(color = "lightgreen") + # Zmiana koloru punktów na zielony
labs(title = "Zależność średniej wielkości oczu od średniej SVL",
x = "Średnia SVL",
y = "Średnia wielkość oczu") +
theme_minimal()
# Wyświetlenie wykresu
print(wykres_punktowy)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_wykresu <- inner_join(srednia_SVL, srednia_oczy, by = "Species")
# Tworzenie wykresu punktowego
# Tworzenie wykresu punktowego
wykres_punktowy <- ggplot(dane_do_wykresu, aes(x = mean_SVL, y = mean_eye_length)) +
geom_point(color = "lightgreen") + # Zmiana koloru punktów na zielony
labs(title = "Zależność średniej wielkości oczu od średniej SVL",
x = "Średnia SVL",
y = "Średnia wielkość oczu") +
theme_minimal()
# Wyświetlenie wykresu
print(wykres_punktowy)
# Zaimportowanie pakietu plotly do tworzenia interaktywnych wykresów
library(plotly)
# Tworzenie interaktywnego wykresu punktowego
wykres_interaktywny <- ggplotly(wykres_punktowy, tooltip = c("Species"))
# Wyświetlenie interaktywnego wykresu
print(wykres_interaktywny)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE)) %>%
arrange(desc(mean_SVL)) # Sortowanie malejąco według średniej długości SVL
# Wyświetlenie gatunków o największej średniej długości SVL
print(srednia_SVL)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE)) %>%
arrange(asc(mean_SVL)) # Sortowanie malejąco według średniej długości SVL
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE)) %>%
arrange(mean_SVL) # Sortowanie malejąco według średniej długości SVL
# Wyświetlenie gatunków o największej średniej długości SVL
print(srednia_SVL)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE)) %>%
arrange(desc(mean_SVL)) # Sortowanie malejąco według średniej długości SVL
# Wyświetlenie gatunków o największej średniej długości SVL
print(srednia_SVL)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE)) %>%
arrange(mean_SVL) # Sortowanie malejąco według średniej długości SVL
# Wyświetlenie gatunków o największej średniej długości SVL
print(srednia_SVL)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE)) %>%
arrange(desc(mean_SVL)) # Sortowanie malejąco według średniej długości SVL
# Obliczenie najmniejszej średniej długości SVL
najmniejsza_SVL <- srednia_SVL %>%
arrange(mean_SVL) # Sortowanie rosnąco według średniej długości SVL
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_sortowania <- inner_join(srednia_SVL, najmniejsza_SVL, by = "Species") %>%
inner_join(srednia_oczy, by = "Species")
# Obliczenie stosunku średniej wielkości oczu do średniej SVL
dane_do_sortowania <- dane_do_sortowania %>%
mutate(oczy_do_SVL = mean_eye_length / mean_SVL) %>%
arrange(oczy_do_SVL) # Sortowanie rosnąco według stosunku oczy do reszty ciała
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie najmniejszej średniej długości SVL
najmniejsza_SVL <- srednia_SVL %>%
arrange(mean_SVL)
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_sortowania <- inner_join(srednia_SVL, najmniejsza_SVL, by = "Species") %>%
inner_join(srednia_oczy, by = "Species")
# Obliczenie stosunku średniej wielkości oczu do średniej SVL
dane_do_sortowania <- dane_do_sortowania %>%
mutate(oczy_do_SVL = mean_eye_length / mean_SVL) %>%
arrange(oczy_do_SVL) # Sortowanie rosnąco według stosunku oczy do reszty ciała
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie najmniejszej średniej długości SVL
najmniejsza_SVL <- srednia_SVL %>%
arrange(mean_SVL)
# Sprawdzenie czy zmienne zostały poprawnie zdefiniowane
print(srednia_SVL)
print(najmniejsza_SVL)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie najmniejszej średniej długości SVL
najmniejsza_SVL <- srednia_SVL %>%
arrange(mean_SVL)
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Połączenie danych
dane_do_sortowania <- inner_join(srednia_SVL, najmniejsza_SVL, by = "Species") %>%
inner_join(srednia_oczy, by = "Species")
# Obliczenie stosunku średniej wielkości oczu do średniej SVL
dane_do_sortowania <- dane_do_sortowania %>%
mutate(oczy_do_SVL = mean_eye_length / mean_SVL) %>%
arrange(oczy_do_SVL) # Sortowanie rosnąco według stosunku oczy do reszty ciała
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Obliczenie średniej długości ciała (SVL) dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Połączenie danych
dane_do_sortowania <- inner_join(srednia_oczy, srednia_SVL, by = "Species")
# Obliczenie stosunku oczy do długości ciała (SVL)
dane_do_sortowania <- dane_do_sortowania %>%
mutate(oczy_do_SVL = mean_eye_length / mean_SVL) %>%
arrange(oczy_do_SVL) # Sortowanie rosnąco według stosunku oczy do długości ciała
# Wyświetlenie wyników
print("Gatunki według największej średniej długości SVL:")
print(head(srednia_SVL, n = 5))
print("Gatunki według najmniejszej średniej długości SVL:")
print(head(srednia_SVL %>% arrange(mean_SVL), n = 5))
print("Gatunki według najmniejszego stosunku oczy do reszty ciała:")
print(head(dane_do_sortowania, n = 5))
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej wielkości oczu dla każdego gatunku
srednia_oczy <- dane %>%
group_by(Species) %>%
summarize(mean_eye_length = mean(Eye.length, na.rm = TRUE))
# Obliczenie średniej długości ciała (SVL) dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Połączenie danych
dane_do_sortowania <- inner_join(srednia_oczy, srednia_SVL, by = "Species")
# Obliczenie stosunku oczy do długości ciała (SVL)
dane_do_sortowania <- dane_do_sortowania %>%
mutate(oczy_do_SVL = mean_eye_length / mean_SVL) %>%
arrange(oczy_do_SVL) # Sortowanie rosnąco według stosunku oczy do długości ciała
# Obliczenie maksymalnego stosunku oczy do długości ciała
najwiekszy_stosunek_oczy_do_SVL <- dane_do_sortowania %>%
arrange(desc(oczy_do_SVL)) # Sortowanie malejąco według stosunku oczy do długości ciała
# Wyświetlenie wyników
print("Gatunki według największej średniej długości SVL:")
print(head(srednia_SVL, n = 5))
print("Gatunki według najmniejszej średniej długości SVL:")
print(head(srednia_SVL %>% arrange(mean_SVL), n = 5))
print("Gatunki według najmniejszego stosunku oczy do reszty ciała:")
print(head(dane_do_sortowania, n = 5))
print("Gatunki według największego stosunku oczy do reszty ciała:")
print(head(najwiekszy_stosunek_oczy_do_SVL, n = 5))
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie najmniejszej średniej długości SVL
najmniejsza_SVL <- srednia_SVL %>%
arrange(mean_SVL)
# Sprawdzenie czy zmienne zostały poprawnie zdefiniowane
print(srednia_SVL)
print(najmniejsza_SVL)
# Zaimportowanie pakietu dplyr
library(dplyr)
# Obliczenie średniej długości SVL dla każdego gatunku
srednia_SVL <- dane %>%
group_by(Species) %>%
summarize(mean_SVL = mean(SVL, na.rm = TRUE))
# Obliczenie najmniejszej średniej długości SVL
najmniejsza_SVL <- srednia_SVL %>%
arrange(desc(mean_SVL))
# Sprawdzenie czy zmienne zostały poprawnie zdefiniowane
print(srednia_SVL)
print(najmniejsza_SVL)
